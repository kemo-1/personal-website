---
import Image from "astro/components/Image.astro";
import image from "../assets/photo.jpg";
---

<div class="flex w-full flex-col lg:flex-row h-full">
  <Image
    src={image}
    alt="Circular Image"
    class="mb-10 mask mask-squircle ms-3 w-100"
  />

  <div class="lg:divider-horizontal divider"></div>
  

<div class="max-w-4xl mx-auto px-4 py-10 space-y-10 text-right rtl">
  <!-- Header Section -->
  <header class="space-y-4">
    <h1 class="text-5xl md:text-6xl font-bold text-primary name">عبدالحكيم الشنقيطي</h1>
    <h2 class="text-2xl md:text-3xl text-base-content para">
      مطور سعودي حاصل على وثيقة العمل الحر في برمجة المواقع
    </h2>
  </header>

  <!-- Stats Section -->
<section class="stats stats-vertical md:stats-horizontal w-full gap-6 bg-base-100 shadow-lg rounded-2xl">
  <!-- Experience Stat -->
  <div class="stat">
    <div class="stat-figure text-secondary">
      <a
        class="tooltip tooltip-right tooltip-primary"
        data-tip="حسابي الذي أنشر فيه الأكواد البرمجية"
        href="https://github.com/kemo-1"
        target="_blank"
        rel="noopener"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          class="inline-block h-10 w-10 stroke-current hover:scale-110 transition-transform"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          ></path>
        </svg>
      </a>
    </div>
    <div class="stat-title text-base-content">سنين الخبرة</div>
    <div class="stat-value ">٣ سنوات</div>
    <div class="stat-desc text-neutral-content">من 2023 - إلى 2025</div>
  </div>

  <!-- Client Sites Stat -->
  <div class="stat transition-all hover:shadow-xl rounded-xl">
    <div class="stat-figure text-primary">
      <a
        class="tooltip tooltip-right tooltip-primary"
        data-tip="ألق نظرة عليها"
        href="#websites"
     
        rel="noopener"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          class="inline-block h-10 w-10 stroke-secondary hover:scale-110 transition-transform"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"
          ></path>
        </svg>
      </a>
    </div>
    <div class="stat-title text-base-content">المواقع التي قمت ببنائها للعملاء</div>
    <div class="stat-value ">٣ مواقع</div>
    <div class="stat-desc text-neutral-content">بدأت العمل الحر في 2025/4/17</div>
  </div>
</section>

</div>




</div>

<script>
  import gsap from "gsap";

  import SplitText from "gsap/SplitText";

  gsap.registerPlugin(SplitText);

  const elements = document.querySelectorAll(".para");

  elements.forEach((element) => {
    const text = element!.textContent;
    element!.innerHTML = text!
      .split("")
      .map((char) => `<span>${char}</span>`)
      .join("");
  });

  // SplitText.create(
  //   ".para" ,
  // )
  gsap.timeline().to(
    ".name",
    {
      repeat: -1,
      repeatDelay: 2,
      keyframes: [
        { y: -20, duration: 0.3, ease: "power2.out" },
        { y: 0, duration: 0.5, ease: "bounce.out" },
      ],
      stagger: 0.05,
    },
    "+=0.2"
  );

  const tl = gsap.timeline();

  tl.repeat(-1)
    .repeatDelay(2)
    .from(".para", {
      y: 100,
      autoAlpha: 0, // Combines opacity: 0 and visibility: hidden
      duration: 0.3,
      ease: "power4.in", // Smoother easing for initial entry
      stagger: 0.1, // Increased stagger for container elements
      immediateRender: true,
    })
    .from(".para span", {
      y: () => Math.random() * 100 + 50, // Random vertical starting position between 50-150px
      scale: 0,
      rotation: () => Math.random() * 20 - 10, // Random rotation between -10 and 10 degrees
      autoAlpha: 0,
      duration: 1.5,
      ease: "elastic.out(1, 0.3)", // Bouncy elastic effect
      stagger: {
        each: 0.05, // Slightly faster stagger for letters
        from: "random", // Random start point for staggers
      },
      onStart: () => {
        gsap.set(".para span", { willChange: "transform, opacity" }); // Optimize for performance
      },
    })
    .to(
      ".para span",
      {
        y: 0,
        scale: 1,
        rotation: 0,
        color: "var(--color-primary)", // Add color transition
        autoAlpha: 1,
        duration: 2.5,
        ease: "bounce.out",
        stagger: 0.03,
        repeat: 1, // Add one repeat for extra bounce
        yoyo: true,
      },
      "-=0.5"
    ) // Overlap with previous animation
    .to(
      ".para",
      {
        keyframes: [
          { y: -10, duration: 0.3, ease: "power2.out" },
          { y: 0, duration: 0.5, ease: "bounce.out" },
        ],
        stagger: 0.05,
      },
      "+=0.2"
    )
    .to(
      ".para",
      {
        y: 100,
        autoAlpha: 0,
        duration: 1,
        ease: "power4.in",
      },
      "<"
    );
</script>

<style>
  .para {
    display: inline-block;
    overflow: hidden;
    padding: 0.2em;
  }

  .para span {
    display: inline-block;
    transform-origin: center bottom;
  }
  .mask-squircle {
    animation: float 4s ease-in-out infinite;
    filter: drop-shadow(0 10px 15px rgba(0, 0, 0, 0.3));
  }

  /* Keyframes */
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(20px);
    }
  }

  /* .sea-text {
  position: relative;
  display: block; 
  color: transparent;
  background: linear-gradient(90deg, #0a3d62, #3c6382, #6a89cc, #82ccdd);
  background-size: 200% 200%;
  -webkit-background-clip: text;
  background-clip: text;
  animation: seaAnimation 3s ease infinite;
  line-height: 1.2; 
  padding-bottom: 4px; 
  margin: 0.5em 0; 
}


@keyframes seaAnimation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
} */
</style>
